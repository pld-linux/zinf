--- zinf-2.2.3/configure.in.orig	2003-01-19 18:04:10.000000000 +0100
+++ zinf-2.2.3/configure.in	2003-07-21 08:22:18.000000000 +0200
@@ -64,13 +64,12 @@
 AC_STDC_HEADERS
 AC_HAVE_HEADERS(unistd.h io.h pthread.h errno.h)
 
-AC_LANG_SAVE
-AC_LANG_CPLUSPLUS
+AC_LANG_PUSH(C++)
 AC_HAVE_HEADERS(sstream)
-AC_LANG_RESTORE
+AC_LANG_POP
 
-AC_CHECK_LIB(socket, connect, [EXTRALIBS="$EXTRALIBS -lsocket"])
-AC_CHECK_LIB(nsl, gethostbyname, [EXTRALIBS="$EXTRALIBS -lnsl"])
+AC_CHECK_FUNC(connect, , [AC_CHECK_LIB(socket, connect, [EXTRALIBS="$EXTRALIBS -lsocket"])])
+AC_CHECK_FUNC(gethostbyname, , [AC_CHECK_LIB(nsl, gethostbyname, [EXTRALIBS="$EXTRALIBS -lnsl"])])
 
 dnl Checks for gdbm
 
@@ -126,8 +126,7 @@
   ], [
     AC_MSG_CHECKING($3 AC_PROTOTYPE_STATUS(tags))
     ac_save_CPPFLAGS="$CPPFLAGS"
-    ifelse(AC_LANG,CPLUSPLUS,if test "$GXX" = "yes" ; then CPPFLAGS="$CPPFLAGS -Werror" ; fi)
-    ifelse(AC_LANG,C,if test "$GCC" = "yes" ; then CPPFLAGS="$CPPFLAGS -Werror" ; fi)
+    CPPFLAGS="$CPPFLAGS -Werror"
     AC_TRY_COMPILE($2, $1, [
       CPPFLAGS="$ac_save_CPPFLAGS"
       AC_MSG_RESULT(ok)
@@ -254,8 +253,7 @@
 fi
 
 if test "$isunix" = "true" ; then
-    AC_LANG_SAVE
-    AC_LANG_C dnl PLUSPLUS
+    AC_LANG_PUSH(C) dnl PLUSPLUS
     AC_MSG_CHECKING(for G++ >= 2.91)
     AC_TRY_RUN([
 int main() {
@@ -280,7 +278,7 @@
         echo "Re-run this configure script after you have a newer version."
         exit 1
     fi
-    AC_LANG_RESTORE
+    AC_LANG_POP
 fi
  
 AC_SUBST(OSTYPE)
@@ -323,8 +321,7 @@
      ESD_LIBS=""
      have_esound="false"
   else
-     AC_LANG_SAVE
-     AC_LANG_C
+     AC_LANG_PUSH(C)
      ESD_CFLAGS=`$ESD_CONFIG --cflags`
      ESD_LIBS=`$ESD_CONFIG --libs`
      min_esd_version=0.2.12
@@ -397,7 +394,7 @@
 ],, have_esound=false, have_esound=false)
      CFLAGS="$ac_save_CFLAGS"
      LIBS="$ac_save_LIBS"
-     AC_LANG_RESTORE
+     AC_LANG_POP
      rm -f conf.esdtest
   fi
 
@@ -417,6 +417,7 @@
 AC_SUBST(ESD_LIBS)
 
 dnl Check to use external id3lib.
+AC_LANG_PUSH(C++)
 ID3LIB_LIBS=""
 AC_CHECK_HEADER(id3/tag.h, [have_id3lib="true"], [have_id3lib="false"])
 if test "$have_id3lib" = "true" ; then 
@@ -427,6 +428,7 @@
    echo "id3.sourceforge.net and install"       
 fi
 AC_SUBST(ID3LIB_LIBS)
+AC_LANG_POP
 
 dnl Check for Internation stuff.
 AC_ALLOCA
@@ -439,13 +436,12 @@
 
 
 dnl Check for the boost format library (used sparingly).
-dnl AC_LANG_SAVE
-dnl AC_LANG_CPLUSPLUS
+dnl AC_LANG_PUSH(C++)
 dnl AC_CHECK_HEADER(boost/format.hpp,[have_boost="true"],[have_boost="false"])
 dnl if  test "$have_boost" == "false" ; then
 dnl  AC_MSG_ERROR([Please install the boost format library http://www.boost.org])
 dnl fi
-dnl AC_LANG_RESTORE
+dnl AC_LANG_POP
    
 
 
@@ -453,8 +449,7 @@
 dnl optional freetype support..
 save_CPPFLAGS="$CPPFLAGS"
 CPPFLAGS="$CPPFLAGS"
-AC_LANG_SAVE
-AC_LANG_C
+AC_LANG_PUSH(C)
 AC_CHECK_HEADERS(freetype.h, have_freetype="true", have_freetype="false")
 
 if test "$have_freetype" = "false"; then
@@ -465,7 +460,7 @@
                     have_freetype="false")
 fi
 CPPFLAGS="$save_CPPFLAGS"
-AC_LANG_RESTORE
+AC_LANG_POP
 
 TTF_LIBS=""
 if test "$have_freetype" = "true"; then
@@ -579,11 +574,10 @@
 save_CPPFLAGS="$CPPFLAGS"
 ORBIT_CPP_CFLAGS=`orbit-config --cflags server`
 CPPFLAGS="$CPPFLAGS $GTK_CFLAGS $ORBIT_CPP_CFLAGS" 
-AC_LANG_SAVE
-AC_LANG_C
+AC_LANG_PUSH(C)
 AC_CHECK_HEADERS(orb/orbit.h, have_orbit="true", have_orbit="false")
 CPPFLAGS="$save_CPPFLAGS"
-AC_LANG_RESTORE
+AC_LANG_POP
 
 ORBIT_LIBS=""
 ORBIT_IDL=""
@@ -712,8 +706,7 @@
   ac_save_LIBS="$LIBS"
 
   LIBS="$LIBS -lasound"
-  AC_LANG_SAVE
-  AC_LANG_C
+  AC_LANG_PUSH(C)
   AC_TRY_RUN([
 #include <alsa/asoundlib.h>
 void main(void)
@@ -752,7 +745,7 @@
 }
 ], , have_alsa=false, have_alsa=false
 )
-   AC_LANG_RESTORE
+   AC_LANG_POP
    CFLAGS="$ac_save_CFLAGS"
    LIBS="$ac_save_LIBS"
    if test "$have_alsa" = "false"; then
@@ -987,8 +980,7 @@
 CFLAGS="$CFLAGS $GDK_PIXBUF_CFLAGS"
 AC_SUBST(CFLAGS)
 
-AC_LANG_SAVE
-AC_LANG_CPLUSPLUS
+AC_LANG_PUSH(C++)
 AC_CHECK_LIB(musicbrainz, mb_GetVersion, ,
   [ echo "***"
     echo "*** Zinf requires the MusicBrainz client library version 1.0.1."
@@ -996,9 +988,8 @@
     echo "***     http://www.musicbrainz.org/download.html"
     echo "***"
     AC_MSG_ERROR(Cannot continue.)],-ldl -lm -lstdc++)
-AC_LANG_RESTORE
+AC_LANG_POP
 
 AC_CONFIG_HEADER(config/config.h)
-AC_OUTPUT([Makefile Makefile-plugins Makefile.header Makefile.towav po/Makefile.in  po/Makefile.in],
-[sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])
+AC_OUTPUT([Makefile Makefile-plugins Makefile.header Makefile.towav po/Makefile.in])
 touch .config.check
